const apiUrl = 'https://zylalabs.com/api/1975/ai+text+detection+api/1734/ai+detection'; // AI Text Detection API endpoint URL
const apiKey = 'Bearer 2175|GUhaGLy13GdpJV1KXIYzKJwtbuZ9qOqRuytOtJUq'; // API key


// Sample text for analysis
const textToAnalyze = "ply reply to this email or give us a call at (800) 976-6674 to speak with one of our friendly loan specialists who will guide you through the process and provide you with a personalized loan offer tailored to your needs. Don't miss out on this fantastic opportunity to save money on your auto loan. Contact us today to get started and enjoy the benefits of refinancing with Capital One. Warm regards, Maria Gonzalez Auto Loan Specialist Capital One (800) 976-2254"; //The example scam mail is hard coded as the text to analyze. Once Cloud Vision API is implemented, replace with text output generated by Google Cloud Vision

// Create the request payload
const requestData = {
  text: textToAnalyze,
};

// Create the request headers, including the API key
const headers = {
  'Content-Type': 'application/json',
  'Authorization': apiKey,
};

// Create the fetch options for the POST request
const requestOptions = {
  method: 'POST',
  headers: headers,
  body: JSON.stringify(requestData),
};

// Make the POST request to the API
fetch(apiUrl, requestOptions)
  .then((response) => {
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }
    return response.json();
  })
  .then((data) => {
    // Handle the response data from the API
    const result = data.fakePercentage;

    // Get a reference to the element where you want to display the result
    const verdictElement = document.getElementById('verdict-text');
    const percentElement = document.getElementById('percent-err');
    const descriptionElement = document.getElementById('verdict-description');
    const langElement = document.getElementById('lang-err');
    const discElement = document.getElementById('discrepency-error');


    // Display content based on the 'result' value
    if (result > 50) {
      verdictElement.textContent = 'Scam';
      verdictElement.style.color = 'Red';
      percentElement.style.color = 'Red';
      descriptionElement.textContent = 'Based on the results, it is likely that the email you provided is fraudulent. Please contact your local branch to verify the validity of the email before further contact. Below is the contact information of a branch near you.';
  } else if (result > 30 && result <= 50) {
      verdictElement.textContent = 'Real';
      verdictElement.style.color = 'Green';
      percentElement.style.color = 'Yellow';
  } else if (result >= 0 && result <= 30) {
      verdictElement.textContent = 'Real';
      verdictElement.style.color = 'Green';
      percentElement.style.color = 'Green';
  } else {
      percentElement.style.color = 'White';
  }  

    percentElement.textContent = result + '%';
    langElement.textContent = 10;
    discElement.textContent = 4;
    langElement.style.color = "Yellow";
    discElement.style.color = "Yellow";


    console.log(data);
    
  })
  .catch((error) => {
    console.error('Fetch Error:', error);
  });
